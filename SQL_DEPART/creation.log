SQL> 
SQL> @creation_tables.sql
SQL> REM CREATION DES TABLES
SQL> 
SQL> CREATE TABLE JOUEUR(
  2  	NoJoueur						INTEGER			NOT NULL,
  3  	Courriel						VARCHAR2(256)	NOT NULL,
  4  	Surnom							VARCHAR2(50)	NOT NULL,
  5  	Miniature						BLOB,
  6  	Nom								VARCHAR2(100),
  7  	Prenom							VARCHAR2(100),
  8  	Actif							CHAR(1)
  9  );

Table JOUEUR créé(e).

SQL> 
SQL> CREATE TABLE ESRB(
  2  	Code							CHAR(1)			NOT NULL,
  3  	Description						VARCHAR2(50)	NOT NULL
  4  );

Table ESRB créé(e).

SQL> 
SQL> CREATE TABLE GENRE(
  2  	Code							CHAR(3)			NOT NULL,
  3  	Description						VARCHAR2(50)	NOT NULL,
  4  	CodeGenreParent					CHAR(3)			NOT NULL
  5  );

Table GENRE créé(e).

SQL> 
SQL> CREATE TABLE SOUS_GENRE_JEU(
  2  	CodeSousGenre					CHAR(3)			NOT NULL,
  3  	IdJeu							INTEGER			NOT NULL
  4  );

Table SOUS_GENRE_JEU créé(e).

SQL> 
SQL> CREATE TABLE JEU(
  2  	IdJeu							INTEGER			NOT NULL,
  3  	Nom								VARCHAR2(100)	NOT NULL,
  4  	Description						VARCHAR2(256)	NOT NULL,
  5  	CodeESRB						CHAR(1),
  6  	CodeGenre						CHAR(3)
  7  );

Table JEU créé(e).

SQL> 
SQL> CREATE TABLE CONTENU(
  2  	IdContenu						INTEGER			NOT NULL,
  3  	Nom								VARCHAR2(100)	NOT NULL,
  4  	Description						VARCHAR2(256)	NOT NULL,
  5  	DateSortie						DATE,
  6  	TypeContenu						VARCHAR2(1)		NOT NULL,
  7  	IdJeu							INTEGER			NOT NULL	
  8  );

Table CONTENU créé(e).

SQL> 
SQL> CREATE TABLE CONTENU_POSSEDE(
  2  	IdContenu						INTEGER			NOT NULL,
  3  	NoJoueur						INTEGER			NOT NULL
  4  );

Table CONTENU_POSSEDE créé(e).

SQL> 
SQL> CREATE TABLE SUCCES(
  2  	IdSucces						INTEGER			NOT NULL,
  3  	Titre							VARCHAR2(50)	NOT NULL,
  4  	Description						VARCHAR2(256),
  5  	Image							BLOB,
  6  	Valeur							NUMBER(3,0),
  7  	IdContenu						INTEGER			NOT NULL	
  8  );

Table SUCCES créé(e).

SQL> 
SQL> CREATE TABLE SUCCES_CALCULE(
  2  	IdSucces						INTEGER			NOT NULL,
  3  	MaximumRequis					NUMBER(3,0)		NOT NULL
  4  );

Table SUCCES_CALCULE créé(e).

SQL> 
SQL> CREATE TABLE SUCCES_REALISE(
  2  	IdContenu						INTEGER			NOT NULL,
  3  	NoJoueur						INTEGER			NOT NULL,
  4  	IdSucces						INTEGER			NOT NULL
  5  );

Table SUCCES_REALISE créé(e).

SQL> 
SQL> CREATE TABLE SUCCES_EN_COURS(
  2  	IdContenu						INTEGER			NOT NULL,
  3  	NoJoueur						INTEGER			NOT NULL,
  4  	IdSucces						INTEGER			NOT NULL,
  5  	Compteur						NUMBER(3,0)		NOT NULL
  6  );

Table SUCCES_EN_COURS créé(e).

SQL> 
SQL> 
SQL> CREATE TABLE FORFAIT(
  2  	Code							CHAR(5)			NOT NULL,
  3  	Nom								VARCHAR2(100),
  4  	Description						VARCHAR2(1000)
  5  );

Table FORFAIT créé(e).

SQL> 
SQL> CREATE TABLE PERIODE(
  2  	IdPeriode						INTEGER			NOT NULL,
  3  	DateDebut						DATE			NOT NULL,
  4  	DateFin							DATE			NOT NULL,
  5  	Prix							NUMBER (6,2)	NOT NULL,
  6  	CodeForfait						CHAR(5)			NOT NULL
  7  );

Table PERIODE créé(e).

SQL> 
SQL> CREATE TABLE PERIODE_FORFAIT_JOUEUR(
  2  	IdPeriode						INTEGER			NOT NULL,
  3  	NoJoueur						INTEGER			NOT NULL,
  4  	DateAchat						DATE			NOT NULL
  5  );

Table PERIODE_FORFAIT_JOUEUR créé(e).

SQL> 
SQL> CREATE TABLE RESEAU(
  2  	Code							CHAR(6)			NOT NULL,
  3  	Nom								VARCHAR2(50)	NOT NULL,
  4  	Description						VARCHAR2(100)	NOT NULL,
  5  	Actif							VARCHAR2(1)		NOT NULL
  6  );

Table RESEAU créé(e).

SQL> 
SQL> CREATE TABLE ABONNEMENT_RESEAU(
  2  	CodeReseau						CHAR(6)			NOT NULL,
  3  	NoJoueur						INTEGER			NOT NULL
  4  );

Table ABONNEMENT_RESEAU créé(e).

SQL> 
SQL> CREATE TABLE SUIVI_RESEAU(
  2  	IdSuivi							INTEGER			NOT NULL,
  3  	Moment							TIMESTAMP		NOT NULL,
  4  	CodeReseau						CHAR(6)			NOT NULL,
  5  	DateSuivi						DATE			NOT NULL,
  6  	Action							CHAR(3)			NOT NULL,
  7  	NoJoueur						INTEGER
  8  );

Table SUIVI_RESEAU créé(e).

SQL> 
SQL> CREATE TABLE AMI(
  2  	NoJoueurInvitant				INTEGER			NOT NULL,	
  3  	NoJoueurInvite					INTEGER			NOT NULL,	
  4  	DateDebut						DATE,
  5  	CodeStatut						CHAR(3)			NOT NULL	
  6  );

Table AMI créé(e).

SQL> 
SQL> CREATE TABLE STATUT_AMITIE(
  2  	CodeStatut						CHAR(3)			NOT NULL,
  3  	Description						VARCHAR2(25)	NOT NULL	
  4  );

Table STATUT_AMITIE créé(e).

SQL> 
SQL> CREATE TABLE SUIVI_AMITIE(
  2  	IdSuivi							INTEGER			NOT NULL,
  3  	Moment							TIMESTAMP		NOT NULL,
  4  	NoJoueurInvitant				INTEGER			NOT NULL,	
  5  	NoJoueurInvite					INTEGER			NOT NULL,	
  6  	DateSuivi						DATE			NOT NULL,
  7  	CodeStatut						CHAR(3)			NOT NULL
  8  );

Table SUIVI_AMITIE créé(e).

SQL> @creation_contraintes.sql
SQL> REM CLÉS PRIMAIRES (PK)
SQL> 
SQL> ALTER TABLE JOUEUR
  2  	ADD CONSTRAINT JOUEUR_PK
  3  	PRIMARY KEY (NoJoueur)	
  4  	USING INDEX;

Table JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE ESRB
  2  	ADD CONSTRAINT ESRB_PK
  3  	PRIMARY KEY (Code)	
  4  	USING INDEX;

Table ESRB modifié(e).

SQL> 
SQL> ALTER TABLE GENRE
  2  	ADD CONSTRAINT GENRE_PK
  3  	PRIMARY KEY (Code)	
  4  	USING INDEX;

Table GENRE modifié(e).

SQL> 
SQL> ALTER TABLE SOUS_GENRE_JEU
  2  	ADD CONSTRAINT SOUS_GENRE_JEU_PK
  3  	PRIMARY KEY (CodeSousGenre, IdJeu)	
  4  	USING INDEX;

Table SOUS_GENRE_JEU modifié(e).

SQL> 
SQL> ALTER TABLE JEU
  2  	ADD CONSTRAINT JEU_PK
  3  	PRIMARY KEY (IdJeu)	
  4  	USING INDEX;

Table JEU modifié(e).

SQL> 
SQL> ALTER TABLE CONTENU
  2  	ADD CONSTRAINT CONTENU_PK
  3  	PRIMARY KEY (IdContenu)	
  4  	USING INDEX;

Table CONTENU modifié(e).

SQL> 
SQL> ALTER TABLE CONTENU_POSSEDE
  2  	ADD CONSTRAINT CONTENU_POSSEDE_PK
  3  	PRIMARY KEY (IdContenu, NoJoueur)	
  4  	USING INDEX;

Table CONTENU_POSSEDE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES
  2  	ADD CONSTRAINT SUCCES_PK
  3  	PRIMARY KEY (IdSucces)	
  4  	USING INDEX;

Table SUCCES modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_CALCULE
  2  	ADD CONSTRAINT SUCCES_CALCULE_PK
  3  	PRIMARY KEY (IdSucces)	
  4  	USING INDEX;

Table SUCCES_CALCULE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_REALISE
  2  	ADD CONSTRAINT SUCCES_REALISE_PK
  3  	PRIMARY KEY (IdContenu, NoJoueur, IdSucces)	
  4  	USING INDEX;

Table SUCCES_REALISE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_EN_COURS
  2  	ADD CONSTRAINT SUCCES_EN_COURS_PK
  3  	PRIMARY KEY (IdContenu, NoJoueur, IdSucces)	
  4  	USING INDEX;

Table SUCCES_EN_COURS modifié(e).

SQL> 
SQL> ALTER TABLE FORFAIT
  2  	ADD CONSTRAINT FORFAIT_PK
  3  	PRIMARY KEY (Code)	
  4  	USING INDEX;

Table FORFAIT modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE
  2  	ADD CONSTRAINT PERIODE_PK
  3  	PRIMARY KEY (IdPeriode)	
  4  	USING INDEX;

Table PERIODE modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE_FORFAIT_JOUEUR
  2  	ADD CONSTRAINT PERIODE_FORFAIT_JOUEUR_PK
  3  	PRIMARY KEY (IdPeriode, NoJoueur)
  4  	USING INDEX;

Table PERIODE_FORFAIT_JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE RESEAU
  2  	ADD CONSTRAINT RESEAU_PK
  3  	PRIMARY KEY (Code)	
  4  	USING INDEX;

Table RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE ABONNEMENT_RESEAU
  2  	ADD CONSTRAINT ABONNEMENT_RESEAU_PK
  3  	PRIMARY KEY (CodeReseau, NoJoueur)	
  4  	USING INDEX;

Table ABONNEMENT_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_RESEAU
  2  	ADD CONSTRAINT SUIVI_RESEAU_PK
  3  	PRIMARY KEY (IdSuivi)	
  4  	USING INDEX;

Table SUIVI_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE AMI
  2  	ADD CONSTRAINT AMI_PK
  3  	PRIMARY KEY (NoJoueurInvitant, NoJoueurInvite)	
  4  	USING INDEX;

Table AMI modifié(e).

SQL> 
SQL> ALTER TABLE STATUT_AMITIE
  2  	ADD CONSTRAINT STATUT_AMITIE_PK
  3  	PRIMARY KEY (CodeStatut)	
  4  	USING INDEX;

Table STATUT_AMITIE modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_AMITIE
  2  	ADD CONSTRAINT SUIVI_AMITIE_PK
  3  	PRIMARY KEY (IdSuivi)	
  4  	USING INDEX;

Table SUIVI_AMITIE modifié(e).

SQL> 
SQL> 
SQL> REM CLÉS ÉTRANGÈRES (FK)
SQL> 
SQL> ALTER TABLE GENRE
  2  	ADD CONSTRAINT GENRE_FK
  3  	FOREIGN KEY (CodeGenreParent)
  4  	REFERENCES GENRE (Code);

Table GENRE modifié(e).

SQL> 
SQL> ALTER TABLE SOUS_GENRE_JEU
  2  	ADD CONSTRAINT SOUS_GENRE_JEU_SOUS_GENRE_FK
  3  	FOREIGN KEY (CodeSousGenre)
  4  	REFERENCES GENRE (Code);

Table SOUS_GENRE_JEU modifié(e).

SQL> 
SQL> ALTER TABLE SOUS_GENRE_JEU
  2  	ADD CONSTRAINT SOUS_GENRE_JEU_ID_JEU_FK
  3  	FOREIGN KEY (IdJeu)
  4  	REFERENCES JEU (IdJeu);

Table SOUS_GENRE_JEU modifié(e).

SQL> 
SQL> ALTER TABLE JEU
  2  	ADD CONSTRAINT JEU_CODE_ESRB_FK
  3  	FOREIGN KEY (CodeESRB)
  4  	REFERENCES ESRB (Code);

Table JEU modifié(e).

SQL> 
SQL> ALTER TABLE JEU
  2  	ADD CONSTRAINT JEU_CODE_GENRE_FK
  3  	FOREIGN KEY (CodeGenre)
  4  	REFERENCES GENRE (Code);

Table JEU modifié(e).

SQL> 
SQL> ALTER TABLE CONTENU
  2  	ADD CONSTRAINT CONTENU_FK
  3  	FOREIGN KEY (IdJeu)
  4  	REFERENCES JEU (IdJeu);

Table CONTENU modifié(e).

SQL> 
SQL> ALTER TABLE CONTENU_POSSEDE
  2  	ADD CONSTRAINT CONTENU_POSSEDE_ID_CONTENU_FK
  3  	FOREIGN KEY (IdContenu)
  4  	REFERENCES Contenu (IdContenu);

Table CONTENU_POSSEDE modifié(e).

SQL> 
SQL> ALTER TABLE CONTENU_POSSEDE
  2  	ADD CONSTRAINT CONTENU_POSSEDE_NO_JOUEUR_FK
  3  	FOREIGN KEY (NoJoueur)
  4  	REFERENCES Joueur (NoJoueur);

Table CONTENU_POSSEDE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES
  2  	ADD CONSTRAINT SUCCES_FK
  3  	FOREIGN KEY (IdContenu)
  4  	REFERENCES CONTENU (IdContenu);

Table SUCCES modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_CALCULE
  2  	ADD CONSTRAINT SUCCES_CALCULE_FK
  3  	FOREIGN KEY (IdSucces)
  4  	REFERENCES SUCCES (IdSucces);

Table SUCCES_CALCULE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_REALISE
  2  	ADD CONSTRAINT SUCCES_REALISE_ID_SUCCES_FK
  3  	FOREIGN KEY (IdSucces)
  4  	REFERENCES SUCCES (IdSucces);

Table SUCCES_REALISE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_REALISE
  2  	ADD CONSTRAINT SUCCES_REALISE_CONTENU_FK
  3  	FOREIGN KEY (IdContenu, NoJoueur)
  4  	REFERENCES CONTENU_POSSEDE (IdContenu, NoJoueur);

Table SUCCES_REALISE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_EN_COURS
  2  	ADD CONSTRAINT SUCCES_EN_COURS_ID_SUCCES_FK
  3  	FOREIGN KEY (IdSucces)
  4  	REFERENCES SUCCES_CALCULE (IdSucces);

Table SUCCES_EN_COURS modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_EN_COURS
  2  	ADD CONSTRAINT SUCCES_EN_COURS_CONTENU_FK
  3  	FOREIGN KEY (IdContenu, NoJoueur)
  4  	REFERENCES CONTENU_POSSEDE (IdContenu, NoJoueur);

Table SUCCES_EN_COURS modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE
  2  	ADD CONSTRAINT PERIODE_FK
  3  	FOREIGN KEY (CodeForfait)
  4  	REFERENCES FORFAIT (Code);

Table PERIODE modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE_FORFAIT_JOUEUR
  2  	ADD CONSTRAINT PERIODE_FORF_J_ID_PERIODE_FK
  3  	FOREIGN KEY (IdPeriode)
  4  	REFERENCES PERIODE (IdPeriode);

Table PERIODE_FORFAIT_JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE_FORFAIT_JOUEUR
  2  	ADD CONSTRAINT PERIODE_FORF_J_NO_JOUEUR_FK
  3  	FOREIGN KEY (NoJoueur)
  4  	REFERENCES JOUEUR (NoJoueur);

Table PERIODE_FORFAIT_JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE ABONNEMENT_RESEAU
  2  	ADD CONSTRAINT ABONNEMENT_CODE_RESEAU_FK
  3  	FOREIGN KEY (CodeReseau)
  4  	REFERENCES RESEAU (Code);

Table ABONNEMENT_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE ABONNEMENT_RESEAU
  2  	ADD CONSTRAINT ABONNEMENT_NO_JOUEUR_FK
  3  	FOREIGN KEY (NoJoueur)
  4  	REFERENCES JOUEUR (NoJoueur);

Table ABONNEMENT_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_RESEAU
  2  	ADD CONSTRAINT SUIVI_RESEAU_CODE_RESEAU_FK
  3  	FOREIGN KEY (CodeReseau)
  4  	REFERENCES RESEAU (Code);

Table SUIVI_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_RESEAU
  2  	ADD CONSTRAINT SUIVI_RESEAU_NO_JOUEUR_FK
  3  	FOREIGN KEY (NoJoueur)
  4  	REFERENCES JOUEUR (NoJoueur);

Table SUIVI_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE AMI 
  2  	ADD CONSTRAINT AMI_CODE_STATUT_FK
  3  	FOREIGN KEY (CodeStatut)
  4  	REFERENCES STATUT_AMITIE (CodeStatut);

Table AMI modifié(e).

SQL> 
SQL> ALTER TABLE AMI
  2  	ADD CONSTRAINT AMI_NO_JOUEUR_INVITANT_FK
  3  	FOREIGN KEY (NoJoueurInvitant)
  4  	REFERENCES JOUEUR (NoJoueur);

Table AMI modifié(e).

SQL> 
SQL> ALTER TABLE AMI
  2  	ADD CONSTRAINT AMI_NO_JOUEUR_INVITE_FK
  3  	FOREIGN KEY (NoJoueurInvite)
  4  	REFERENCES JOUEUR (NoJoueur);

Table AMI modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_AMITIE
  2  	ADD CONSTRAINT SUIVI_AMI_NO_J_INVITANT_FK
  3  	FOREIGN KEY (NoJoueurInvitant)
  4  	REFERENCES JOUEUR (NoJoueur);

Table SUIVI_AMITIE modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_AMITIE
  2  	ADD CONSTRAINT SUIVI_AMI_NO_J_INVITE_FK
  3  	FOREIGN KEY (NoJoueurInvite)
  4  	REFERENCES JOUEUR (NoJoueur);

Table SUIVI_AMITIE modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_AMITIE
  2  	ADD CONSTRAINT SUIVI_AMITIE_CODE_STATUT_FK
  3  	FOREIGN KEY (CodeStatut)
  4  	REFERENCES STATUT_AMITIE (CodeStatut);

Table SUIVI_AMITIE modifié(e).

SQL> 
SQL> 
SQL> REM Champs UNIQUE
SQL> 
SQL> ALTER TABLE JOUEUR
  2  	ADD CONSTRAINT JOUEUR_UNIQUE UNIQUE (Courriel, Surnom);

Table JOUEUR modifié(e).

SQL> 
SQL> 
SQL> REM Listes des constraintes (CHECK CONSTRAINT)
SQL> 
SQL> ALTER TABLE CONTENU
  2  	ADD CONSTRAINT CHECK_CONTENU_TYPE CHECK (
  3  		TypeContenu IN ('J', 'D', 'O')
  4  	);

Table CONTENU modifié(e).

SQL> 
SQL> ALTER TABLE JOUEUR
  2  	ADD CONSTRAINT CHECK_JOUEUR_ACTIF CHECK (
  3  		Actif IN ('1', '0')
  4  	);

Table JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE RESEAU
  2  	ADD CONSTRAINT CHECK_RESEAU_ACTIF CHECK (
  3  		Actif IN ('1', '0')
  4  	);

Table RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_RESEAU
  2  	ADD CONSTRAINT CHECK_SUIVI_RESEAU_ACTION CHECK (
  3  		Action IN ('CRE', 'SUP', 'ACT', 'DES', 'ABO', 'DSA')
  4  	);

Table SUIVI_RESEAU modifié(e).

SQL> REM 'CREATION RESEAU', 'SUPPRESSION RESEAU', 
SQL> REM 'ACTIVATION RESEAU', 'DESACTIVATION RESEAU', 
SQL> REM 'ABONNEMENT JOUEUR', 'DESABONNEMENT JOUEUR'
SQL> 
SQL> ALTER TABLE SUCCES
  2  	ADD CONSTRAINT CHECK_SUCCES_VALEUR CHECK (Valeur > 0);

Table SUCCES modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_CALCULE
  2  	ADD CONSTRAINT CHECK_SUCCES_C_MAX_REQUIS CHECK (MaximumRequis > 0);

Table SUCCES_CALCULE modifié(e).

SQL> 
SQL> ALTER TABLE SUCCES_EN_COURS
  2  	ADD CONSTRAINT CHECK_SUCCES_EN_COURS_COMPTEUR CHECK (Compteur > 0);

Table SUCCES_EN_COURS modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE
  2  	ADD CONSTRAINT CHECK_PERIODE_PRIX CHECK (Prix >= 0);

Table PERIODE modifié(e).

SQL> 
SQL> 
SQL> REM Valeurs par défaut
SQL> 
SQL> ALTER TABLE SUCCES_EN_COURS
  2    MODIFY (Compteur DEFAULT 0);

Table SUCCES_EN_COURS modifié(e).

SQL> 
SQL> ALTER TABLE PERIODE_FORFAIT_JOUEUR
  2    MODIFY (DateAchat DEFAULT SysDate);

Table PERIODE_FORFAIT_JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE JOUEUR
  2    MODIFY (Actif DEFAULT '1');

Table JOUEUR modifié(e).

SQL> 
SQL> ALTER TABLE RESEAU
  2    MODIFY (Actif DEFAULT '1');

Table RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE RESEAU
  2    MODIFY (Actif DEFAULT '1');

Table RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_RESEAU
  2    MODIFY (Moment DEFAULT CURRENT_TIMESTAMP);

Table SUIVI_RESEAU modifié(e).

SQL> 
SQL> ALTER TABLE SUIVI_AMITIE
  2    MODIFY (Moment DEFAULT CURRENT_TIMESTAMP);

Table SUIVI_AMITIE modifié(e).

SQL> 
SQL> 
SQL> REM Séquences
SQL> 
SQL> CREATE SEQUENCE JEU_SEQ;

Sequence JEU_SEQ créé(e).

SQL> CREATE SEQUENCE CONTENU_SEQ;

Sequence CONTENU_SEQ créé(e).

SQL> CREATE SEQUENCE SUCCES_SEQ;

Sequence SUCCES_SEQ créé(e).

SQL> CREATE SEQUENCE PERIODE_SEQ;

Sequence PERIODE_SEQ créé(e).

SQL> CREATE SEQUENCE JOUEUR_SEQ;

Sequence JOUEUR_SEQ créé(e).

SQL> CREATE SEQUENCE SUIVI_AMITIE_SEQ;

Sequence SUIVI_AMITIE_SEQ créé(e).

SQL> CREATE SEQUENCE SUIVI_RESEAU_SEQ;

Sequence SUIVI_RESEAU_SEQ créé(e).

SQL> @creation_scripts.sql
SQL> REM CREATION DES SCRIPTS
SQL> 
SQL> @scripts/creation_declencheurs.sql
SQL> REM CREATION DES TRIGGERS
SQL> 
SQL> @declencheurs/sequences.sql
SQL> CREATE SEQUENCE CONTENU_SEQ
  2      MINVALUE 1
  3      START WITH 1
  4      INCREMENT BY 1;

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE CONTENU_SEQ
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER CONTENU_ID_TRG
  2      BEFORE INSERT
  3      ON CONTENU
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT CONTENU_SEQ.NEXTVAL
  7          INTO :NEW.IDCONTENU
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger CONTENU_ID_TRG compilé

SQL> 
SQL> CREATE SEQUENCE JEU_SEQ;

Erreur commençant à la ligne: 16 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE JEU_SEQ
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER JEU_ID_TRG
  2      BEFORE INSERT
  3      ON JEU
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT JEU_SEQ.NEXTVAL
  7          INTO :NEW.IDJEU
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger JEU_ID_TRG compilé

SQL> 
SQL> CREATE SEQUENCE JOUEUR_SEQ;

Erreur commençant à la ligne: 28 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE JOUEUR_SEQ
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER JOUEUR_ID_TRG
  2      BEFORE INSERT
  3      ON JOUEUR
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT JOUEUR_SEQ.NEXTVAL
  7          INTO :NEW.NOJOUEUR
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger JOUEUR_ID_TRG compilé

SQL> 
SQL> CREATE SEQUENCE PERIODE_SEQ;

Erreur commençant à la ligne: 40 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE PERIODE_SEQ
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER PERIODE_ID_TRG
  2      BEFORE INSERT
  3      ON PERIODE
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT PERIODE_SEQ.NEXTVAL
  7          INTO :NEW.IDPERIODE
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger PERIODE_ID_TRG compilé

SQL> 
SQL> CREATE SEQUENCE SUCCES_SEQ;

Erreur commençant à la ligne: 52 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE SUCCES_SEQ
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER SUCCES_ID_TRG
  2      BEFORE INSERT
  3      ON SUCCES
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT SUCCES_SEQ.NEXTVAL
  7          INTO :NEW.IDSUCCES
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger SUCCES_ID_TRG compilé

SQL> 
SQL> CREATE SEQUENCE SUIVI_AMITIE_SEQ;

Erreur commençant à la ligne: 64 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE SUIVI_AMITIE_SEQ
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER SUIVI_AMITIE_ID_TRG
  2      BEFORE INSERT
  3      ON SUIVI_AMITIE
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT SUIVI_AMITIE_SEQ.NEXTVAL
  7          INTO :NEW.IDSUIVI
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger SUIVI_AMITIE_ID_TRG compilé

SQL> 
SQL> CREATE SEQUENCE SUIVI_RESEAU_SEQ;

Erreur commençant à la ligne: 76 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\sequences.sql
Dans la commande -
CREATE SEQUENCE SUIVI_RESEAU_SEQ
Rapport d'erreur -
ORA-00955: ce nom d'objet existe déjà
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> CREATE TRIGGER SUIVI_RESEAU_ID_TRG
  2      BEFORE INSERT
  3      ON SUIVI_RESEAU
  4      FOR EACH ROW
  5  BEGIN
  6      SELECT SUIVI_RESEAU_SEQ.NEXTVAL
  7          INTO :NEW.IDSUIVI
  8          FROM DUAL;
  9  END;
 10  /

Elément Trigger SUIVI_RESEAU_ID_TRG compilé

SQL> 
SQL> @declencheurs/nouveauSuccesEnCours.sql 
SQL> CREATE OR REPLACE TRIGGER NouveauSuccesEnCours_TRG
  2  BEFORE INSERT 
  3  ON SUCCES_EN_COURS
  4  FOR EACH ROW
  5  
  6  DECLARE COMPLETED_SUCCESS number:=0;
  7  
  8  BEGIN
  9  
 10      SELECT count(*) INTO COMPLETED_SUCCESS from SUCCES_REALISE where IdSucces = :NEW.IDSUCCES;
 11  
 12      --if we find a already existing success, don't insert
 13      IF (COMPLETED_SUCCESS > 0)
 14      THEN
 15       raise_application_error(-20000, 'Succès déjà complété.');
 16      END IF;
 17  
 18  
 19  
 20  END;
 21  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\nouveauSuccesEnCours.sql
Dans la commande -
CREATE OR REPLACE TRIGGER NouveauSuccesEnCours_TRG
BEFORE INSERT 
ON SUCCES_EN_COURS
FOR EACH ROW

DECLARE COMPLETED_SUCCESS number:=0;

BEGIN

    SELECT count(*) INTO COMPLETED_SUCCESS from SUCCES_REALISE where IdSucces = :NEW.IDSUCCES;

    --if we find a already existing success, don't insert
    IF (COMPLETED_SUCCESS > 0)
    THEN
     raise_application_error(-20000, 'Succès déjà complété.');
    END IF;



END;
Rapport d'erreur -
ORA-00603: ORACLE server session terminated by fatal error
ORA-00600: internal error code, arguments: [kqlidchg0], [], [], [], [], [], [], [], [], [], [], []
ORA-00604: error occurred at recursive SQL level 1
ORA-00001: unique constraint (SYS.I_PLSCOPE_SIG_IDENTIFIER$) violated
00603. 00000 -  "ORACLE server session terminated by fatal error"
*Cause:    An Oracle server session was in an unrecoverable state.
*Action:   Log in to Oracle again so a new server session will be created
           automatically.  Examine the session trace file for more
           information.
SQL> @declencheurs/genre.sql 
SQL> CREATE OR REPLACE TRIGGER Genre_TRG
  2  BEFORE UPDATE 
  3  ON JEU
  4  FOR EACH ROW
  5  
  6  BEGIN
  7  
  8      if (:old.codegenre != :new.codegenre)
  9      then
 10          delete from sous_genre_jeu where idJeu = :old.idJeu;
 11      end if;
 12  
 13  
 14  END;
 15  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\genre.sql
Dans la commande -
CREATE OR REPLACE TRIGGER Genre_TRG
BEFORE UPDATE 
ON JEU
FOR EACH ROW

BEGIN

    if (:old.codegenre != :new.codegenre)
    then
        delete from sous_genre_jeu where idJeu = :old.idJeu;
    end if;


END;
Rapport d'erreur -
Il n'y a plus de données à lire dans le socket
SQL> @declencheurs/suiviReseau.sql 
SQL> CREATE OR REPLACE TRIGGER Suivi_Reseau_TRG
  2  AFTER UPDATE OR INSERT 
  3  ON RESEAU
  4  FOR EACH ROW
  5  
  6  DECLARE 
  7      currentMoment timestamp;
  8      currentAction SUIVI_RESEAU.ACTION%type;
  9  
 10  BEGIN
 11       SELECT SYSTIMESTAMP into currentMoment FROM DUAL;
 12  
 13      if INSERTING  
 14      then
 15      currentAction := 'CRE';
 16  
 17      elsif UPDATING
 18      then
 19          if (:new.Actif = '1')   then
 20              currentAction := 'ACT';
 21          else
 22              currentAction := 'DES';
 23          end if;
 24  
 25  
 26      end if;
 27  
 28  
 29      insert into SUIVI_RESEAU ( codeReseau, DateSuivi, Action)
 30          VALUES(:new.code, currentMoment, currentAction );
 31  
 32  
 33  
 34  
 35  END;
 36  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\suiviReseau.sql
Dans la commande -
CREATE OR REPLACE TRIGGER Suivi_Reseau_TRG
AFTER UPDATE OR INSERT 
ON RESEAU
FOR EACH ROW

DECLARE 
    currentMoment timestamp;
    currentAction SUIVI_RESEAU.ACTION%type;

BEGIN
     SELECT SYSTIMESTAMP into currentMoment FROM DUAL;

    if INSERTING  
    then
    currentAction := 'CRE';

    elsif UPDATING
    then
        if (:new.Actif = '1')   then
            currentAction := 'ACT';
        else
            currentAction := 'DES';
        end if;


    end if;


    insert into SUIVI_RESEAU ( codeReseau, DateSuivi, Action)
        VALUES(:new.code, currentMoment, currentAction );




END;
Rapport d'erreur -
Connexion interrompue
SQL> @declencheurs/suiviAbonnementReseau.sql

Erreur commençant à la ligne: 8 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_declencheurs.sql
Dans la commande -
@declencheurs/suiviAbonnementReseau.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "declencheurs/suiviAbonnementReseau.sql"
SQL> @declencheurs/suiviAmi.sql
SQL> CREATE OR REPLACE TRIGGER Suivi_Ami_TRG
  2  AFTER UPDATE OR INSERT OR DELETE
  3  ON AMI
  4  FOR EACH ROW
  5  
  6  DECLARE 
  7      currentMoment timestamp;
  8  
  9  BEGIN
 10      SELECT SYSTIMESTAMP into currentMoment FROM DUAL;
 11  
 12      if INSERTING or UPDATING
 13      then
 14          insert into SUIVI_AMITIE (DATESUIVI, CODESTATUT, NOJOUEURINVITANT, NOJOUEURINVITE)
 15          values (currentMoment, :NEW.CODESTATUT, :NEW.NOJOUEURINVITANT, :NEW.NOJOUEURINVITE);
 16  
 17      elsif DELETING
 18      then
 19          insert into SUIVI_AMITIE (DATESUIVI, CODESTATUT, NOJOUEURINVITANT, NOJOUEURINVITE)
 20          values (currentMoment, :OLD.CODESTATUT, :OLD.NOJOUEURINVITANT, :OLD.NOJOUEURINVITE);
 21  
 22      end if;
 23  
 24  END;
 25  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\declencheurs\suiviAmi.sql
Dans la commande -
CREATE OR REPLACE TRIGGER Suivi_Ami_TRG
AFTER UPDATE OR INSERT OR DELETE
ON AMI
FOR EACH ROW

DECLARE 
    currentMoment timestamp;

BEGIN
    SELECT SYSTIMESTAMP into currentMoment FROM DUAL;

    if INSERTING or UPDATING
    then
        insert into SUIVI_AMITIE (DATESUIVI, CODESTATUT, NOJOUEURINVITANT, NOJOUEURINVITE)
        values (currentMoment, :NEW.CODESTATUT, :NEW.NOJOUEURINVITANT, :NEW.NOJOUEURINVITE);

    elsif DELETING
    then
        insert into SUIVI_AMITIE (DATESUIVI, CODESTATUT, NOJOUEURINVITANT, NOJOUEURINVITE)
        values (currentMoment, :OLD.CODESTATUT, :OLD.NOJOUEURINVITANT, :OLD.NOJOUEURINVITE);

    end if;

END;
Rapport d'erreur -
Connexion interrompue
SQL> @scripts/creation_procedures.sql
SQL> REM CREATION DES PROCEDURES
SQL> 
SQL> @procedures/ajoutForfait.sql
SQL> CREATE OR REPLACE PROCEDURE ajoutForfait(
  2      Code IN FORFAIT.CODE%TYPE,
  3      Nom IN FORFAIT.NOM%TYPE,
  4      Description IN FORFAIT.DESCRIPTION%TYPE,
  5      Prix IN PERIODE.PRIX%TYPE
  6      )
  7  IS
  8      NomForfait FORFAIT.CODE%TYPE;
  9      Today DATE;
 10  BEGIN
 11      SELECT SYSDATE INTO Today FROM DUAL;
 12      NomForfait := Nom;
 13  
 14      IF (NomForfait IS NULL)
 15      THEN
 16          NomForfait := 'DEFAULT';
 17      END IF;
 18  
 19      INSERT INTO FORFAIT VALUES (Code, Nom, Description);
 20      INSERT INTO PERIODE (DATEDEBUT, DATEFIN, PRIX, CODEFORFAIT) VALUES (Today, add_months(Today, 12), Prix, Code);
 21  
 22  END;
 23  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\procedures\ajoutForfait.sql
Dans la commande -
CREATE OR REPLACE PROCEDURE ajoutForfait(
    Code IN FORFAIT.CODE%TYPE,
    Nom IN FORFAIT.NOM%TYPE,
    Description IN FORFAIT.DESCRIPTION%TYPE,
    Prix IN PERIODE.PRIX%TYPE
    )
IS
    NomForfait FORFAIT.CODE%TYPE;
    Today DATE;
BEGIN
    SELECT SYSDATE INTO Today FROM DUAL;
    NomForfait := Nom;

    IF (NomForfait IS NULL)
    THEN
        NomForfait := 'DEFAULT';
    END IF;

    INSERT INTO FORFAIT VALUES (Code, Nom, Description);
    INSERT INTO PERIODE (DATEDEBUT, DATEFIN, PRIX, CODEFORFAIT) VALUES (Today, add_months(Today, 12), Prix, Code);

END;
Rapport d'erreur -
Connexion interrompue
SQL> @procedures/prolongationForfait.sql
SQL> CREATE OR REPLACE PROCEDURE ajoutForfait(
  2      CodeForfait IN FORFAIT.CODE%TYPE,
  3      PlayerCount OUT NUMBER
  4      )
  5  IS
  6      
  7      
  8      rec_PERIODE_FORFAIT_JOUEUR PERIODE_FORFAIT_JOUEUR%ROWTYPE;
  9      Today DATE;
 10  
 11      CURSOR cur_PERIODE_FORFAIT_JOUEUR IS
 12      SELECT * FROM PERIODE_FORFAIT_JOUEUR WHERE
 13      IDPERIODE IN (SELECT PERIODE.IDPERIODE FROM PERIODE WHERE CODEFORFAIT = CodeForfait);
 14  BEGIN
 15      SELECT SYSDATE INTO Today FROM DUAL;
 16  
 17      FETCH cur_PERIODE_FORFAIT_JOUEUR INTO rec_PERIODE_FORFAIT_JOUEUR;
 18      WHILE cur_PERIODE_FORFAIT_JOUEUR%FOUND LOOP
 19          IF (rec_PERIODE_FORFAIT_JOUEUR.DATEACHAT < add_months(Today, 12)) 
 20          THEN
 21              UPDATE PERIODE_FORFAIT_JOUEUR SET DATEACHAT = add_months(DATEACHAT, 2)
 22              WHERE IDPERIODE = rec_PERIODE_FORFAIT_JOUEUR.IDPERIODE;
 23              PlayerCount := PlayerCount + 1;
 24          END IF;
 25          FETCH cur_PERIODE_FORFAIT_JOUEUR INTO rec_PERIODE_FORFAIT_JOUEUR;
 26      END LOOP;
 27  
 28  
 29      CLOSE cur_PERIODE_FORFAIT_JOUEUR;
 30  
 31  END;
 32  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\procedures\prolongationForfait.sql
Dans la commande -
CREATE OR REPLACE PROCEDURE ajoutForfait(
    CodeForfait IN FORFAIT.CODE%TYPE,
    PlayerCount OUT NUMBER
    )
IS
    
    
    rec_PERIODE_FORFAIT_JOUEUR PERIODE_FORFAIT_JOUEUR%ROWTYPE;
    Today DATE;

    CURSOR cur_PERIODE_FORFAIT_JOUEUR IS
    SELECT * FROM PERIODE_FORFAIT_JOUEUR WHERE
    IDPERIODE IN (SELECT PERIODE.IDPERIODE FROM PERIODE WHERE CODEFORFAIT = CodeForfait);
BEGIN
    SELECT SYSDATE INTO Today FROM DUAL;

    FETCH cur_PERIODE_FORFAIT_JOUEUR INTO rec_PERIODE_FORFAIT_JOUEUR;
    WHILE cur_PERIODE_FORFAIT_JOUEUR%FOUND LOOP
        IF (rec_PERIODE_FORFAIT_JOUEUR.DATEACHAT < add_months(Today, 12)) 
        THEN
            UPDATE PERIODE_FORFAIT_JOUEUR SET DATEACHAT = add_months(DATEACHAT, 2)
            WHERE IDPERIODE = rec_PERIODE_FORFAIT_JOUEUR.IDPERIODE;
            PlayerCount := PlayerCount + 1;
        END IF;
        FETCH cur_PERIODE_FORFAIT_JOUEUR INTO rec_PERIODE_FORFAIT_JOUEUR;
    END LOOP;


    CLOSE cur_PERIODE_FORFAIT_JOUEUR;

END;
Rapport d'erreur -
Connexion interrompue
SQL> @procedures/ajusterPromotion.sql
SQL> CREATE OR REPLACE PROCEDURE ajusterPromotion(
  2      CodeForfait OUT FORFAIT.CODE%TYPE,
  3      NewPrice OUT PERIODE.PRIX%TYPE
  4      )
  5  IS
  6      CodeReseauPlusPopulaire ABONNEMENT_RESEAU.CODERESEAU%TYPE;
  7  BEGIN
  8      NomForfait := Nom;
  9  
 10      SELECT * INTO CodeReseauPlusPopulaire FROM (SELECT CODERESEAU FROM ABONNEMENT_RESEAU GROUP BY CODERESEAU ORDER BY COUNT(CODERESEAU) DESC) WHERE rownum = 1;
 11  
 12  
 13  
 14  
 15  
 16  END;
 17  /

Erreur commençant à la ligne: 1 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\procedures\ajusterPromotion.sql
Dans la commande -
CREATE OR REPLACE PROCEDURE ajusterPromotion(
    CodeForfait OUT FORFAIT.CODE%TYPE,
    NewPrice OUT PERIODE.PRIX%TYPE
    )
IS
    CodeReseauPlusPopulaire ABONNEMENT_RESEAU.CODERESEAU%TYPE;
BEGIN
    NomForfait := Nom;

    SELECT * INTO CodeReseauPlusPopulaire FROM (SELECT CODERESEAU FROM ABONNEMENT_RESEAU GROUP BY CODERESEAU ORDER BY COUNT(CODERESEAU) DESC) WHERE rownum = 1;





END;
Rapport d'erreur -
Connexion interrompue
SQL> @procedures/suppressionJeu.sql

Erreur commençant à la ligne: 6 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_procedures.sql
Dans la commande -
@procedures/suppressionJeu.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "procedures/suppressionJeu.sql"
SQL> @scripts/creation_fonctions.sql
SQL> REM CREATION DES FONCTIONS
SQL> 
SQL> @fonctions/succesPlusRealise.sql

Erreur commençant à la ligne: 3 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_fonctions.sql
Dans la commande -
@fonctions/succesPlusRealise.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "fonctions/succesPlusRealise.sql"
SQL> @fonctions/validerGenre.sql

Erreur commençant à la ligne: 4 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_fonctions.sql
Dans la commande -
@fonctions/validerGenre.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "fonctions/validerGenre.sql"
SQL> @fonctions/joueurLePlusPopulaire.sql

Erreur commençant à la ligne: 5 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_fonctions.sql
Dans la commande -
@fonctions/joueurLePlusPopulaire.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "fonctions/joueurLePlusPopulaire.sql"
SQL> @fonctions/jeuLePlusPopulaire.sql

Erreur commençant à la ligne: 6 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_fonctions.sql
Dans la commande -
@fonctions/jeuLePlusPopulaire.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "fonctions/jeuLePlusPopulaire.sql"
SQL> @scripts/creation_vues.sql
SQL> REM CREATION DES VUES
SQL> 
SQL> @vues/mesSucces.sql

Erreur commençant à la ligne: 3 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_vues.sql
Dans la commande -
@vues/mesSucces.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "vues/mesSucces.sql"
SQL> @vues/suivi.sql

Erreur commençant à la ligne: 4 Fichier @ C:\Users\utilisateur\Downloads\travail2\SQL_DEPART\scripts\creation_vues.sql
Dans la commande -
@vues/suivi.sql
Rapport d'erreur -
SP2-0310 : impossible d'ouvrir le fichier : "vues/suivi.sql"
